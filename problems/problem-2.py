"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def get_fib_numbers_up_to(value):
    values = [1, 2]
    current_first_number = values[0]
    current_second_number = values[1]
    while current_second_number < value:
        next_number = current_first_number + current_second_number
        if next_number < value:
            values.append(next_number)
        current_first_number = current_second_number
        current_second_number = next_number
    return values

def solution():
    values = get_fib_numbers_up_to(4000000) 
    even_values = [x for x in values if x % 2 == 0]
    return sum(even_values)

print solution()
